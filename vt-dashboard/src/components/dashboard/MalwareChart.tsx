import React from 'react';
import { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';
import { PieChart, Pie, Cell, ResponsiveContainer, Tooltip, Legend } from 'recharts';
import { Shield } from 'lucide-react';

interface MalwareData {
  name: string;
  value: number;
  color: string;
}

interface MalwareChartProps {
  malicious: number;
  suspicious: number;
  clean: number;
  undetected: number;
  isLoading?: boolean;
}

const CustomTooltip = ({ active, payload }: any) => {
  if (active && payload && payload.length) {
    const data = payload[0].payload;
    return (
      <div className="rounded-lg border bg-background p-2 shadow-md">
        <p className="font-medium">{data.name}</p>
        <p className="text-sm text-muted-foreground">
          {data.value.toLocaleString()} files
        </p>
        <p className="text-sm text-muted-foreground">
          {((data.value / data.total) * 100).toFixed(1)}%
        </p>
      </div>
    );
  }
  return null;
};

export function MalwareChart({
  malicious,
  suspicious,
  clean,
  undetected,
  isLoading = false
}: MalwareChartProps) {
  const total = malicious + suspicious + clean + undetected;
  
  const data: MalwareData[] = [
    { 
      name: 'Malicious', 
      value: malicious, 
      color: 'hsl(var(--malicious))'
    },
    { 
      name: 'Suspicious', 
      value: suspicious, 
      color: 'hsl(var(--suspicious))'
    },
    { 
      name: 'Clean', 
      value: clean, 
      color: 'hsl(var(--clean))'
    },
    { 
      name: 'Undetected', 
      value: undetected, 
      color: 'hsl(var(--undetected))'
    },
  ].filter(item => item.value > 0);

  const chartData = data.map(item => ({ ...item, total }));

  if (isLoading) {
    return (
      <Card>
        <CardHeader>
          <CardTitle className="flex items-center space-x-2">
            <Shield className="h-5 w-5" />
            <span>Detection Overview</span>
          </CardTitle>
        </CardHeader>
        <CardContent>
          <div className="h-80 flex items-center justify-center">
            <div className="w-40 h-40 bg-muted animate-pulse rounded-full" />
          </div>
        </CardContent>
      </Card>
    );
  }

  if (total === 0) {
    return (
      <Card>
        <CardHeader>
          <CardTitle className="flex items-center space-x-2">
            <Shield className="h-5 w-5" />
            <span>Detection Overview</span>
          </CardTitle>
        </CardHeader>
        <CardContent>
          <div className="h-80 flex items-center justify-center text-muted-foreground">
            No detection data available
          </div>
        </CardContent>
      </Card>
    );
  }

  return (
    <Card>
      <CardHeader>
        <CardTitle className="flex items-center space-x-2">
          <Shield className="h-5 w-5" />
          <span>Detection Overview</span>
        </CardTitle>
      </CardHeader>
      <CardContent>
        <div className="h-80">
          <ResponsiveContainer width="100%" height="100%">
            <PieChart>
              <Pie
                data={chartData}
                cx="50%"
                cy="50%"
                labelLine={false}
                label={({ name, percent }) => 
                  percent && percent > 0.05 ? `${name} (${(percent * 100).toFixed(0)}%)` : ''
                }
                outerRadius={80}
                fill="#8884d8"
                dataKey="value"
              >
                {chartData.map((entry, index) => (
                  <Cell 
                    key={`cell-${index}`} 
                    fill={entry.color} 
                  />
                ))}
              </Pie>
              <Tooltip content={<CustomTooltip />} />
              <Legend 
                wrapperStyle={{ fontSize: '12px' }}
                formatter={(value, entry) => (
                  <span style={{ color: entry.color }}>
                    {value} ({entry.payload?.value?.toLocaleString()})
                  </span>
                )}
              />
            </PieChart>
          </ResponsiveContainer>
        </div>
      </CardContent>
    </Card>
  );
}